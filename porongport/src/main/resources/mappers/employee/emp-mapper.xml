<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="empMapper">
	<resultMap id="empResultSet" type="emp">
		<result column="EMP_NO" property="empNo" />
		<result column="EMP_NAME" property="empName" />
		<result column="EMP_PWD" property="empPwd" />
		<result column="EMP_PHONE" property="empPhone" />
		<result column="EMP_ADDRESS" property="empAddress" />
		<result column="EMP_ADDRESSCODE" property="empAddressCode" />
		<result column="EMP_STATUS" property="empStatus" />
		<result column="EMP_ADMIN" property="empAdmin" /> <!-- 관리자급 여부 -->
		<result column="EMP_EMAIL" property="empEmail" />
		<result column="DEPT_CODE" property="deptCode" />
		<result column="DEPT_NAME" property="deptName" />
		<result column="JOB_CODE" property="jobCode" />
		<result column="JOB_NAME" property="jobName" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="FILE_NO" property="fileNo" />
		<result column="EMP_ANNUAL" property="empAnnual" />
		<result column="EMP_COUNT" property="empCount" />
		<result column="FIRST_LOGIN" property="firstLogin" />
 	</resultMap>
 	
 	<resultMap id="attResultSet" type="att">
 		<result column="WORK_DATE" property="workDate" />
 		<result column="EMP_NO" property="empNo" />
 		<result column="WORK_START" property="workStart" />
 		<result column="WORK_END" property="workEnd" />
 	</resultMap>
	
	<!-- 로그인 쿼리 -->
	<select id="loginEmp" parameterType="emp" resultMap="empResultSet">
		SELECT
		       EMP_NO
		       ,EMP_NAME
		       ,EMP_PWD
		       ,EMP_PHONE
		       ,EMP_ADDRESS
		       ,EMP_ADDRESSCODE
		       ,EMP_STATUS
		       ,EMP_ADMIN
		       ,EMP_EMAIL
		       ,DEPT_CODE
		       ,DEPT_NAME
		       ,JOB_CODE
		       ,JOB_NAME
		       ,CREATE_DATE
		       ,MODIFY_DATE
		       ,FILE_NO
		       ,EMP_ANNUAL
		       ,EMP_COUNT
		       ,FIRST_LOGIN
		  FROM
		       EMPLOYEE
		  LEFT 
		  JOIN
		       DEPARTMENT USING(DEPT_CODE)
		  LEFT 
		  JOIN
		       JOB USING(JOB_CODE)
		 WHERE
		       EMP_NO = #{empNo}
		   AND
		       EMP_STATUS = 'Y'
	</select>
	
	<!-- 최초 로그인 여부에 대한 쿼리 -->
	<select id="firstLogin" parameterType="emp" resultType="_int">
		SELECT
		      COUNT(*)
		  FROM
		      EMPLOYEE
		 WHERE
		      EMP_NO = #{empNo}
		   AND
		      EMP_STATUS = 'Y'
		   AND
		      FIRST_LOGIN = 'T'
	</select>
	
	<!-- 출근 INSERT -->
	<insert id="insertAtt" parameterType="att">
		INSERT
		  INTO
		      ATTENDANCE
		      (
		      WORK_DATE
		      ,EMP_NO
		      ,WORK_START
		      )
		VALUES 
		      (
		       #{workDate}
		       ,#{empNo} 
		       ,#{workStart}
		       )
	</insert>
	
	<!-- 근태 리스트 조회 -->
	<select id="attList" parameterType="_int" resultMap="attResultSet">
		SELECT
		      WORK_DATE
		      ,WORK_START
		      ,WORK_END
		  FROM
		      ATTENDANCE
		 WHERE
		      EMP_NO = #{empNo}
		 ORDER
		    BY WORK_DATE DESC
	</select>
	
	<!-- 입사자 등록 -->
	<!-- 입사자 등록시, 직급이 차장이면 관리자급 부여 -->
	<insert id="insertEmp" parameterType="emp">
		<choose>
			<when test="jobCode == 'SM'">
		INSERT
		  INTO
		      EMPLOYEE
		      (
		      EMP_NAME
		      ,EMP_NO
		      ,EMP_PWD
		      ,DEPT_CODE
		      ,JOB_CODE
		      ,EMP_ADMIN
		      )
		VALUES
		      (
		      #{empName}
		      ,#{empNo}
		      ,#{empPwd}
		      ,#{deptCode}
		      ,#{jobCode}
		      ,'A'
		      )
			</when>
			<otherwise>
		INSERT
		  INTO
		      EMPLOYEE
		      (
		      EMP_NAME
		      ,EMP_NO
		      ,EMP_PWD
		      ,DEPT_CODE
		      ,JOB_CODE
		      )
		VALUES
		      (
		      #{empName}
		      ,#{empNo}
		      ,#{empPwd}
		      ,#{deptCode}
		      ,#{jobCode}
		      )
			</otherwise>
		</choose>

	</insert>
	
	<!-- 오늘 근태 기록 조회 쿼리 -->
	<select id="selectAtt" parameterType="att" resultMap="attResultSet">
		SELECT 
		      WORK_DATE
		     ,WORK_START
		     ,WORK_END
		  FROM 
		      ATTENDANCE 
		 WHERE 
		      EMP_NO = #{empNo}
		   AND
		      WORK_DATE LIKE #{workDate}
		 ORDER 
		    BY WORK_DATE DESC
	</select>
	
	<!-- 퇴근기록 update -->
	<update id="updateAtt" parameterType="att">
		UPDATE
		      ATTENDANCE
		  SET
		      WORK_END = #{workEnd}
		 WHERE
		      EMP_NO = #{empNo}
		   AND
		      WORK_DATE = #{workDate}
	</update>
	
	<!-- 아이디 중복체크 쿼리 -->
	<select id="idCheck" parameterType="_int" resultType="_int">
		SELECT
		      COUNT(*)
		  FROM
		      EMPLOYEE
		 WHERE
		      EMP_NO = #{empNo}
		   AND
		      EMP_STATUS = 'Y'
	</select>
	
	<!-- 비밀번호 찾기, 메일발송한 임시비밀번호로 업데이트 -->
	<update id="findPwd" parameterType="emp">
		UPDATE
		      EMPLOYEE
		   SET
		      EMP_PWD = #{empPwd}
		 WHERE
		      EMP_NO = #{empNo}
		   AND 
		      EMP_NAME = #{empName}
		   AND
		      EMP_STATUS = 'Y'
	</update>
	
	<!-- 조직도 조회 -->
	<select id="selectJojigdo" parameterType="string" resultMap="empResultSet">
		SELECT
		      DEPT_CODE 
		      ,DEPT_NAME
		      ,JOB_CODE 
		      ,JOB_NAME 
		      ,EMP_NO 
		      ,EMP_NAME 
		  FROM
		      EMPLOYEE
		  LEFT
		  JOIN
		      DEPARTMENT USING (DEPT_CODE)
          LEFT
		  JOIN
		      JOB USING (JOB_CODE)
		<if test="deptCode == 'HR'">
		 WHERE
		      DEPT_CODE = 'HR'
		</if>
		<if test='deptCode == "PD"'>
		 WHERE
		      DEPT_CODE = 'PD'
		</if>
		<if test='deptCode == "PM"'>
		 WHERE
		      DEPT_CODE = 'PM'	
		</if>
	</select>

	<!-- 사용자 정보 변경 쿼리 -->
	<update id="updateEmp" parameterType="emp">
		UPDATE
		      EMPLOYEE
		<set>
			<if test="!empPwd.equals('')">
		      EMP_PWD = #{empPwd},
			</if>
		      EMP_PHONE = #{empPhone}
		      ,EMP_EMAIL = #{empEmail}
		      ,EMP_ADDRESSCODE = #{empAddressCode}
		      ,EMP_ADDRESS = #{empAddress}
		      ,MODIFY_DATE = SYSDATE
			<if test='firstLogin == "T"'>
			  ,FIRST_LOGIN = 'F'
			</if>
		</set>
		 WHERE
		      EMP_NO = #{empNo}
		   AND
		      EMP_STATUS = 'Y'
	</update>

	<!-- 부서 추가 -->
	<insert id="insertDept" parameterType="emp">
		INSERT
		  INTO
		      DEPARTMENT
		VALUES
		      (
		      #{deptCode}
		      ,#{deptName}
		      ,DEFAULT
		      )
	</insert>
	
	<!-- 부서코드 중복체크 -->
	<select id="dcCheck" parameterType="string" resultType="_int">
		SELECT
		      COUNT(*)
		  FROM 
		      DEPARTMENT
		WHERE
		     DEPT_CODE = #{checkDc}
		  AND
		     DEPT_STATUS = 'Y'
	</select>
	
	<!-- 프로필 업로드 -->
	<insert id="insertProfile" parameterType="profile">
		INSERT
		  INTO
		      ATTACHMENT
		VALUES
		      (
		      SEQ_FILE_NO.NEXTVAL
		      ,#{originFileName}
		      ,#{changeFileName}
		      ,#{filePath}
		      ,SYSDATE
		      ,#{refEmpNo}
		      )
	</insert>
	
	<!-- 프로필 재업로드 -->
	<update id="updateProfile" parameterType="profile">
		UPDATE
		      ATTACHMENT
		   SET
		      ORIGIN_FILENAME = #{originFileName}
		      ,CHANGE_FILENAME = #{changeFileName}
		      ,UPLOAD_DATE = SYSDATE
		 WHERE
		      REF_EMP_NO = #{refEmpNo}
	</update>
	
	<!-- 프로필 조회 -->
	<select id="selectProfile" parameterType="profile" resultType="profile">
		SELECT
		      FILE_NO fileNo
		      ,ORIGIN_FILENAME originFileName
		      ,CHANGE_FILENAME changeFileName
		      ,FILE_PATH filePath
		      ,UPLOAD_DATE uploadDate
		      ,REF_EMP_NO refEmpNo
		  FROM (
		        SELECT
		              FILE_NO
		              ,ORIGIN_FILENAME
		              ,CHANGE_FILENAME
		              ,FILE_PATH
		              ,UPLOAD_DATE
		              ,REF_EMP_NO
		          FROM
		              ATTACHMENT 
		         WHERE
		              REF_EMP_NO = #{refEmpNo}
		         ORDER 
		            BY UPLOAD_DATE DESC)
		 WHERE
		      ROWNUM = 1
	</select>
	
	<!-- 마지막 비밀번호 변경일 조회 -->
	<select id="pwdAlert" parameterType="_int" resultType="_int">
	    SELECT
		      COUNT(*)
		  FROM
		      EMPLOYEE
		 WHERE
		      EMP_NO = #{empNo}
		   AND
		      EMP_STATUS = 'Y'
		   AND
		      (SYSDATE - MODIFY_DATE) > 1 
	</select>
	
</mapper>