<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="noticeMapper">

	<resultMap id="noticeResultSet" type="notice">
		<result column="NOTICE_NO" property="noticeNo" />
		<result column="NOTICE_WRITER" property="noticeWriter" />
		<result column="NOTICE_TITLE" property="noticeTitle" />
		<result column="NOTICE_CONTENT" property="noticeContent" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="NOTICE_STATUS" property="noticeStatus" />
		<result column="NOTICE_COUNT" property="noticeCount" />
		<result column="NOTICE_TYPE" property="noticeType" />
		<result column="NOTICE_REPLY_CNT" property="replyCount" />
		<result column="NOTICE_LIKE_CNT" property="noticeLikeCount" />
		<result column="NOTICE_ATT_CNT" property="attCount" />
		<result column="EMP_NO" property="empNo" />
		<result column="DEPT_NAME" property="deptName" />
		<result column="EMP_NAME" property="empName" />
		<result column="JOB_NAME" property="jobName" />
	</resultMap>
	
	<resultMap id="noticeAttResultSet" type="noticeAttachment">
		<result column="NOTICE_FILE_NO" property="noticeFileNo" />
		<result column="NOTICE_ORIGIN_FILENAME" property="originFileName" />
		<result column="NOTICE_CHANGE_FILENAME" property="changeFileName" />
		<result column="NOTICE_FILE_PATH" property="filePath" />
		<result column="NOTICE_NO" property="noticeNo" />
	</resultMap>
	
	<resultMap id="noticeLikeResultSet" type="noticeLike">
		<result column="NOTICE_LIKE_NO" property="noticeLikeNo" />
		<result column="NOTICE_NO" property="noticeNo" />
		<result column="EMP_NO" property="empNo" />
		<result column="NOTICE_LIKE" property="noticeLike" />
	</resultMap>
	
	<!-- ********************************************************* -->
	<!-- 1) 공지사항 리스트 전체 조회 -->
	<select id="noticeList" resultMap="noticeResultSet" parameterType="notice">
		SELECT
				DISTINCT N.NOTICE_TYPE,
				N.NOTICE_NO,
				N.NOTICE_TITLE,
				E.EMP_NAME,
				J.JOB_NAME,
				D.DEPT_NAME,
				N.CREATE_DATE,
				NVL(NN.NOTICE_ATT_CNT, 0) AS NOTICE_ATT_CNT,
				N.NOTICE_COUNT, NVL(RR.NOTICE_REPLY_CNT, 0) AS NOTICE_REPLY_CNT
	  	 FROM
	  			(
	      		SELECT NOTICE_NO, COUNT(*) AS NOTICE_REPLY_CNT
	        	  FROM REPLY
	       		 GROUP BY NOTICE_NO) RR,
                (
                SELECT NOTICE_NO, COUNT(*) AS NOTICE_ATT_CNT
                  FROM NOTICE_ATTACHMENT
                 GROUP BY NOTICE_NO) NN,
	       		NOTICE N, EMPLOYEE E, JOB J, DEPARTMENT D, NOTICE_ATTACHMENT AT
		 WHERE
		 		N.NOTICE_WRITER = E.EMP_NO
		   AND
		   		E.JOB_CODE = J.JOB_CODE
		   AND
		   		E.DEPT_CODE = D.DEPT_CODE
   		   AND
   		   		N.NOTICE_STATUS = 'Y'
		   AND
		   		N.NOTICE_NO = AT.NOTICE_NO(+)
		   AND
		   		N.NOTICE_NO = RR.NOTICE_NO(+)
           AND
           		N.NOTICE_NO = NN.NOTICE_NO(+)
		 ORDER
		    BY
		    	N.NOTICE_NO DESC
	</select>
	
	<!-- 2) 공지사항 전체 리스트 개수 조회 -->
	<select id="noticeListCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		NOTICE
  		 WHERE
  		 		NOTICE_STATUS = 'Y'
	</select>
	
	<!-- ********************************************************* -->
	<!-- 1) 공지사항 작성 -->
	<insert id="insertNotice" parameterType="notice">
		INSERT
		  INTO
			  	NOTICE
			  	(
	            NOTICE_NO,
	            NOTICE_WRITER,
	            NOTICE_TITLE,
	            NOTICE_CONTENT,
	            CREATE_DATE,
	            NOTICE_STATUS,
	            NOTICE_COUNT,
	            NOTICE_TYPE
	            )
	    VALUES
	    		(
	            SEQ_NOTICE_NO.NEXTVAL,
	            #{ empNo },
	            #{ noticeTitle },
	            #{ noticeContent },
	            SYSDATE,
	            DEFAULT,
	            DEFAULT,
	            #{ noticeType }
	            )
	</insert>
	
	<!-- 2) 공지사항 첨부파일 추가 -->
	<insert id="insertAttachment" parameterType="noticeAttachment">
		INSERT
		  INTO
		  		NOTICE_ATTACHMENT
	            (
	            NOTICE_FILE_NO,
	            NOTICE_ORIGIN_FILENAME,
	            NOTICE_CHANGE_FILENAME,
	            NOTICE_FILE_PATH,
	            NOTICE_NO
	            )
	     VALUES
	     		(
	            SEQ_FILE_NO.NEXTVAL,
	            #{ originFileName },
	            #{ changeFileName },
	            #{ filePath },
	            <if test="noticeNo == 0">
	            SEQ_NOTICE_NO.CURRVAL
	            </if>
	            <if test="noticeNo > 0">
	            #{ noticeNo }
	            </if>
				)
	</insert>
	
	<!-- ********************************************************* -->
	<!-- 1) 공지사항 상세보기 -->
	<select id="detailNotice" resultMap="noticeResultSet" parameterType="hashmap">
		SELECT
				N.NOTICE_NO,
				N.NOTICE_TITLE,
				N.CREATE_DATE,
				N.MODIFY_DATE,
				E.EMP_NAME,
				E.EMP_NO,
				D.DEPT_NAME,
				J.JOB_NAME,
				N.NOTICE_CONTENT,
				N.NOTICE_TYPE,
		        NVL(L.NOTICE_LIKE_CNT, 0) AS NOTICE_LIKE_CNT
		  FROM (
		        SELECT NOTICE_NO, COUNT(NOTICE_NO) AS NOTICE_LIKE_CNT
		          FROM NOTICE_LIKE
		         GROUP BY NOTICE_NO) L,
		        NOTICE N, EMPLOYEE E, DEPARTMENT D, JOB J
		 WHERE
		 		N.NOTICE_WRITER = E.EMP_NO
		   AND
		   		E.DEPT_CODE = D.DEPT_CODE
		   AND
		   		E.JOB_CODE = J.JOB_CODE
		   AND
		   		N.NOTICE_NO = L.NOTICE_NO(+)
		   AND
		   		N.NOTICE_NO = #{ noticeNo }
	</select>
	
	<!-- 2) 공지사항 첨부파일 상세조회 -->
	<select id="selectAttachment" resultMap="noticeAttResultSet">
		SELECT
				NOTICE_FILE_NO,
	   			NOTICE_ORIGIN_FILENAME,
	    		NOTICE_CHANGE_FILENAME,
	    		NOTICE_FILE_PATH,
	    		NOTICE_NO
  		  FROM
  		  		NOTICE_ATTACHMENT
	     WHERE
                NOTICE_NO = #{ noticeNo }
  		 ORDER
  		    BY  NOTICE_FILE_NO DESC
	</select>
	
	<!-- 3) 공지사항 좋아요 여부 체크 -->
	<select id="checkNoticeLike" resultType="_int">
   		SELECT
   				COUNT(*)
   		  FROM
   		  		NOTICE_LIKE
   		 WHERE
   		 		NOTICE_NO = #{ noticeNo }
   		   AND
   		   		EMP_NO = #{ empNo }	
	</select>
	
	<!-- 4) 공지사항 좋아요 취소(삭제) -->
	<delete id="deleteNoticeLike" parameterType="hashmap">
		DELETE
				NOTICE_LIKE
		 WHERE 
		 		NOTICE_NO = #{ noticeNo }
		   AND
		   		EMP_NO = #{ empNo }
	</delete>
	
	<!-- 5) 공지사항 좋아요 추가 -->
	<insert id="insertNoticeLike" parameterType="hashmap">
		INSERT
		  INTO
				NOTICE_LIKE
				(
				NOTICE_LIKE_NO,
				NOTICE_NO,
				EMP_NO,
				NOTICE_LIKE_DATE	<!-- 날짜컬럼 삭제해도 될 듯? -->
				)
				VALUES
				(
				SEQ_NOTICE_LIKE.NEXTVAL,
				#{ noticeNo },
				#{ empNo },
				SYSDATE
				)	
	</insert>
	
	<!-- 6) 공지사항 조회수 증가 -->
	<update id="increaseCount" parameterType="_int">
		UPDATE
				NOTICE
		   SET
		   		NOTICE_COUNT = NOTICE_COUNT + 1
		 WHERE
		 		NOTICE_NO = #{ noticeNo }
	</update>
	
	<!-- 7) 공지사항 게시글 수정 -->
	<update id="updateNotice" parameterType="notice">
		UPDATE
				NOTICE
		   SET
		   		NOTICE_TITLE = #{ noticeTitle },
		   		NOTICE_CONTENT = #{ noticeContent },
		   		NOTICE_TYPE = #{ noticeType },
		   		MODIFY_DATE = SYSDATE
		 WHERE
		 		NOTICE_NO = #{ noticeNo }
		   AND
		   		NOTICE_WRITER = #{ noticeWriter }
	</update>
	
	<!-- 8) 공지사항 첨부파일 수정 -->
	<!-- 삭제? ****************************** -->
	<update id="updateAttachment" parameterType="noticeAttachment">
		UPDATE
				NOTICE_ATTACHMENT
		   SET
		   		NOTICE_ORIGIN_FILENAME = #{ originFileName },
		   		NOTICE_CHANGE_FILENAME = #{ changeFileName },
		   		NOTICE_FILE_PATH = #{ filePath }
		 WHERE
		 		NOTICE_NO = #{ noticeNo }
	</update>
	
	<!-- 9) 공지사항 게시글 삭제 -->
	<update id="deleteNotice" parameterType="_int">
		UPDATE
				NOTICE
		   SET
		   		NOTICE_STATUS = 'N'
		 WHERE
		 		NOTICE_WRITER = #{ empNo }
		   AND
		   		NOTICE_NO = #{ noticeNo }
	</update>
	
	<!-- 10) 공지사항 게시글 첨부파일 삭제 -->
	<delete id="deleteNoticeAttach" parameterType="_int">
		DELETE
		  FROM
		  		NOTICE_ATTACHMENT
		 WHERE
		 		NOTICE_NO = #{ noticeNo }
	</delete>
	
	

	
	
	
	
	
</mapper>
	